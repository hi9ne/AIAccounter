{
  "name": "Tax Calculator Kyrgyzstan",
  "nodes": [
    {
      "parameters": {
        "path": "tax-calc-kg",
        "options": {}
      },
      "id": "db94632b-c76d-480d-8b58-43ec0e4d7da4",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -448,
        128
      ],
      "webhookId": "tax-calc-kg"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.tax_type }}",
                    "rightValue": "vat",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "VAT"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.tax_type }}",
                    "rightValue": "income",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Income Tax"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.tax_type }}",
                    "rightValue": "social",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Social Fund"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.tax_type }}",
                    "rightValue": "patent",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Patent"
            }
          ]
        },
        "options": {}
      },
      "id": "376cb6b4-fb32-4a37-981c-085a270120e2",
      "name": "–¢–∏–ø –Ω–∞–ª–æ–≥–∞",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -224,
        128
      ]
    },
    {
      "parameters": {
        "jsCode": "const totalIncome = parseFloat($json.total_income) || 0;\nconst vatRate = 0.12;\nconst vatAmount = totalIncome * vatRate;\nconst amountWithoutVAT = totalIncome / (1 + vatRate);\n\nreturn {\n  json: {\n    tax_type: '–ù–î–°',\n    total_with_vat: totalIncome,\n    vat_rate: '12%',\n    vat_amount: Math.round(vatAmount * 100) / 100,\n    amount_without_vat: Math.round(amountWithoutVAT * 100) / 100,\n    message: `üìä –†–∞—Å—á—ë—Ç –ù–î–° (–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω)\\n\\nüí∞ –°—É–º–º–∞ —Å –ù–î–°: ${totalIncome.toLocaleString('ru-RU')} —Å–æ–º\\nüìâ –°—É–º–º–∞ –±–µ–∑ –ù–î–°: ${Math.round(amountWithoutVAT).toLocaleString('ru-RU')} —Å–æ–º\\nüí∏ –ù–î–° (12%): ${Math.round(vatAmount).toLocaleString('ru-RU')} —Å–æ–º\\n\\n‚úÖ –ö —É–ø–ª–∞—Ç–µ –≤ –±—é–¥–∂–µ—Ç: ${Math.round(vatAmount).toLocaleString('ru-RU')} —Å–æ–º`\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "10a86981-67c8-449b-8a42-7b0feddc6756",
      "name": "–†–∞—Å—á—ë—Ç –ù–î–° 12%"
    },
    {
      "parameters": {
        "jsCode": "const income = parseFloat($json.total_income) || 0;\nconst expenses = parseFloat($json.total_expenses) || 0;\nconst taxableIncome = Math.max(income - expenses, 0);\n\nlet taxRate = 0;\nlet taxAmount = 0;\n\nif (taxableIncome <= 0) {\n  taxRate = 0;\n  taxAmount = 0;\n} else if (taxableIncome <= 300000) {\n  taxRate = 0.10;\n  taxAmount = taxableIncome * taxRate;\n} else {\n  const firstBracket = 300000 * 0.10;\n  const secondBracket = (taxableIncome - 300000) * 0.15;\n  taxAmount = firstBracket + secondBracket;\n  taxRate = (taxAmount / taxableIncome);\n}\n\nreturn {\n  json: {\n    tax_type: '–ü–æ–¥–æ—Ö–æ–¥–Ω—ã–π –Ω–∞–ª–æ–≥',\n    total_income: income,\n    total_expenses: expenses,\n    taxable_income: taxableIncome,\n    tax_amount: Math.round(taxAmount * 100) / 100,\n    effective_rate: Math.round(taxRate * 1000) / 10 + '%',\n    message: `üìä –†–∞—Å—á—ë—Ç –ø–æ–¥–æ—Ö–æ–¥–Ω–æ–≥–æ –Ω–∞–ª–æ–≥–∞ (–ö–†)\\n\\nüí∞ –î–æ—Ö–æ–¥—ã: ${income.toLocaleString('ru-RU')} —Å–æ–º\\nüí∏ –†–∞—Å—Ö–æ–¥—ã: ${expenses.toLocaleString('ru-RU')} —Å–æ–º\\nüìà –ù–∞–ª–æ–≥–æ–æ–±–ª–∞–≥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥: ${taxableIncome.toLocaleString('ru-RU')} —Å–æ–º\\n\\nüíµ –°—Ç–∞–≤–∫–∞:\\n  –î–æ 300,000 —Å–æ–º: 10%\\n  –°–≤—ã—à–µ 300,000: 15%\\n\\n‚úÖ –ù–∞–ª–æ–≥ –∫ —É–ø–ª–∞—Ç–µ: ${Math.round(taxAmount).toLocaleString('ru-RU')} —Å–æ–º\\nüìä –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Å—Ç–∞–≤–∫–∞: ${Math.round(taxRate * 1000) / 10}%`\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        128
      ],
      "id": "1dccc987-e782-41cb-aa8f-02b647cee61e",
      "name": "–†–∞—Å—á—ë—Ç –ø–æ–¥–æ—Ö–æ–¥–Ω–æ–≥–æ"
    },
    {
      "parameters": {
        "jsCode": "const salary = parseFloat($json.salary) || 0;\nconst socialFundRate = 0.125;\nconst socialFundAmount = salary * socialFundRate;\n\nreturn {\n  json: {\n    tax_type: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ–Ω–¥',\n    salary: salary,\n    rate: '12.5%',\n    social_fund_amount: Math.round(socialFundAmount * 100) / 100,\n    message: `üìä –†–∞—Å—á—ë—Ç –æ—Ç—á–∏—Å–ª–µ–Ω–∏–π –≤ –°–æ—Ü—Ñ–æ–Ω–¥ (–ö–†)\\n\\nüí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞: ${salary.toLocaleString('ru-RU')} —Å–æ–º\\nüìä –°—Ç–∞–≤–∫–∞: 12.5%\\n\\n‚úÖ –û—Ç—á–∏—Å–ª–µ–Ω–∏—è –≤ –°–æ—Ü—Ñ–æ–Ω–¥: ${Math.round(socialFundAmount).toLocaleString('ru-RU')} —Å–æ–º\\n\\nüí° –û—Ç—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–º`\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        240
      ],
      "id": "afc715ba-8f7e-4234-ba2d-6e26b3d4d32b",
      "name": "–†–∞—Å—á—ë—Ç –°–æ—Ü—Ñ–æ–Ω–¥–∞"
    },
    {
      "parameters": {
        "jsCode": "const patentTypes = {\n  retail: { name: '–†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è', amount: 7000 },\n  services: { name: '–ë—ã—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏', amount: 5000 },\n  transport: { name: '–ü–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏', amount: 8000 },\n  cafe: { name: '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ', amount: 10000 },\n  other: { name: '–ü—Ä–æ—á–∏–µ –≤–∏–¥—ã', amount: 6000 }\n};\n\nconst patentType = $json.patent_type || 'other';\nconst patent = patentTypes[patentType] || patentTypes.other;\nconst monthlyAmount = patent.amount;\nconst annualAmount = monthlyAmount * 12;\n\nreturn {\n  json: {\n    tax_type: '–ü–∞—Ç–µ–Ω—Ç –ò–ü',\n    patent_name: patent.name,\n    monthly_payment: monthlyAmount,\n    annual_payment: annualAmount,\n    message: `üìä –†–∞—Å—á—ë—Ç –ø–∞—Ç–µ–Ω—Ç–∞ –¥–ª—è –ò–ü (–ö–†)\\n\\nüìã –í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ${patent.name}\\n\\nüí∞ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂: ${monthlyAmount.toLocaleString('ru-RU')} —Å–æ–º\\nüíµ –ì–æ–¥–æ–≤–æ–π –ø–ª–∞—Ç—ë–∂: ${annualAmount.toLocaleString('ru-RU')} —Å–æ–º\\n\\nüí° –ü–∞—Ç–µ–Ω—Ç –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç:\\n  ‚Ä¢ –ü–æ–¥–æ—Ö–æ–¥–Ω–æ–≥–æ –Ω–∞–ª–æ–≥–∞\\n  ‚Ä¢ –ù–î–°\\n  ‚Ä¢ –û—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏\\n\\n‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –æ–±–æ—Ä–æ—Ç—É: 10 –º–ª–Ω —Å–æ–º/–≥–æ–¥`\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        368
      ],
      "id": "1cbc91dc-c735-42ca-88c4-0ea22ef9bbe1",
      "name": "–†–∞—Å—á—ë—Ç –ø–∞—Ç–µ–Ω—Ç–∞"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        224,
        192
      ],
      "id": "1a7a1984-e245-4d88-a4d3-bb91a4b97712",
      "name": "–û—Ç–≤–µ—Ç"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "–¢–∏–ø –Ω–∞–ª–æ–≥–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–¢–∏–ø –Ω–∞–ª–æ–≥–∞": {
      "main": [
        [
          {
            "node": "–†–∞—Å—á—ë—Ç –ù–î–° 12%",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "–†–∞—Å—á—ë—Ç –ø–æ–¥–æ—Ö–æ–¥–Ω–æ–≥–æ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "–†–∞—Å—á—ë—Ç –°–æ—Ü—Ñ–æ–Ω–¥–∞",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "–†–∞—Å—á—ë—Ç –ø–∞—Ç–µ–Ω—Ç–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–†–∞—Å—á—ë—Ç –ù–î–° 12%": {
      "main": [
        [
          {
            "node": "–û—Ç–≤–µ—Ç",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–†–∞—Å—á—ë—Ç –ø–æ–¥–æ—Ö–æ–¥–Ω–æ–≥–æ": {
      "main": [
        [
          {
            "node": "–û—Ç–≤–µ—Ç",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–†–∞—Å—á—ë—Ç –°–æ—Ü—Ñ–æ–Ω–¥–∞": {
      "main": [
        [
          {
            "node": "–û—Ç–≤–µ—Ç",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–†–∞—Å—á—ë—Ç –ø–∞—Ç–µ–Ω—Ç–∞": {
      "main": [
        [
          {
            "node": "–û—Ç–≤–µ—Ç",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "fbb16228-3af3-4816-895a-fdc3c9491e3b",
  "meta": {
    "instanceId": "bcdca7003a882ee2cf9d975eab94cc02ba456a1ed2ac37511421cb2edeb80c62"
  },
  "id": "XCIH4ujdxPtHeP3w",
  "tags": []
}