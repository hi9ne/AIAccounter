{
  "name": "MiniApp API",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "miniapp",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "webhook-miniapp",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [0, 300],
      "webhookId": "miniapp-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.action }}",
              "operation": "equals",
              "value2": "add_transaction"
            }
          ]
        }
      },
      "id": "check-action",
      "name": "Switch by Action",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "functionCode": "const data = $input.item.json.body.data;\nconst userId = $input.item.json.body.userId || 'unknown';\n\nreturn {\n  json: {\n    type: data.type,\n    amount: parseFloat(data.amount),\n    currency: data.currency || 'KGS',\n    category: data.category,\n    description: data.description || '',\n    date: data.date,\n    time: data.time || '00:00',\n    userId: userId\n  }\n};"
      },
      "id": "prepare-data",
      "name": "Prepare Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [400, 200]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO {{ $json.type === 'income' ? 'income' : 'expenses' }} (amount, currency, category, description, date, time, telegram_user_id, created_at)\nVALUES ($1, $2, $3, $4, $5, $6, $7, NOW())\nRETURNING id, amount, currency, category;",
        "additionalFields": {}
      },
      "id": "insert-transaction",
      "name": "PostgreSQL Insert",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [600, 200],
      "credentials": {
        "postgres": {
          "id": "YOUR_POSTGRES_CREDENTIAL_ID",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: true, message: 'Transaction added', data: $json } }}"
      },
      "id": "response-success",
      "name": "Respond Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [800, 200]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: false, error: 'Unknown action' } }}"
      },
      "id": "response-error",
      "name": "Respond Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [800, 400]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch by Action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch by Action": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data": {
      "main": [
        [
          {
            "node": "PostgreSQL Insert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PostgreSQL Insert": {
      "main": [
        [
          {
            "node": "Respond Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}
