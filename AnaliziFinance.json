{
  "name": "AnaliziFinance",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {
          "maxRetries": 3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        64,
        384
      ],
      "id": "f8e37618-2ff3-422c-94cb-cec0098950ec",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "SyI2pOUeSfbt1JRh",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "1df29445-94b2-4b64-818b-33dc93075126",
      "name": "Telegram Bot Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -1040,
        240
      ],
      "webhookId": "b8605f3e-0f52-4ffc-a4c9-1728eb0e09e2",
      "credentials": {
        "telegramApi": {
          "id": "Nb8jQBRgnrgZzmCF",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "b85dc963-107d-4b49-8b5d-2003486f3bd4",
      "name": "Message Type Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -448,
        240
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "id": "51c7b02f-effd-4526-9bb8-7828748e36d3",
      "name": "Download Voice File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -336,
        64
      ],
      "webhookId": "8fa0a59a-be53-4897-83bb-5b18ed71b529",
      "credentials": {
        "telegramApi": {
          "id": "Nb8jQBRgnrgZzmCF",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "19ee7ab7-a2d9-4d1d-b09b-3d8ba96889a2",
      "name": "Transcribe Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -128,
        64
      ],
      "credentials": {
        "openAiApi": {
          "id": "SyI2pOUeSfbt1JRh",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d6af7fa1-c31a-4514-ae63-397699bf8b21",
              "name": "text",
              "value": "={{ $('Telegram Bot Trigger').first().json.message.text }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -144,
        272
      ],
      "id": "69730705-012a-4259-a381-812ebb1c129f",
      "name": "Prepare Text Data"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{$('Telegram Bot Trigger').first().json.message.message_id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        272,
        272
      ],
      "id": "ede32e23-cb3c-4655-a03d-53f93af7bbf9",
      "name": "Conversation Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}\n\n",
        "options": {
          "systemMessage": "=\n–¢—ã ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –∏ –ª–∏—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –≤ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–µ.\n–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–Ω–∏–º–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–Ω–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Google –¢–∞–±–ª–∏—Ü—É –æ —Ä–∞—Å—Ö–æ–¥–∞—Ö, –¥–æ—Ö–æ–¥–∞—Ö, –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏.\n–í–∞–ª—é—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Å–æ–º (KGS)\n–°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ {{ new Date().toLocaleString('ru-RU', { timeZone: 'Asia/Bishkek', day: '2-digit', month: '2-digit', year: 'numeric' }) }}\n\n---\nüí∏ –†–ê–°–•–û–î–´: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç –ø—Ä–æ —Ç—Ä–∞—Ç—É/–ø–æ–∫—É–ø–∫—É\n–í—ã–∑—ã–≤–∞–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç AddCostGoogleTable –∏ –ø–µ—Ä–µ–¥–∞–≤–∞–π –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: \"date\", \"category\", \"amount\", \"description\", \"operation_type\", \"source\"\n- –ü–∞—Ä–∞–º–µ—Ç—Ä date: —Ñ–æ—Ä–º–∞—Ç \"–î–î.–ú–ú.–ì–ì–ì–ì\"\n- –ü–∞—Ä–∞–º–µ—Ç—Ä category: –æ–¥–Ω–∞ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∏–∂–µ\n- –ü–∞—Ä–∞–º–µ—Ç—Ä amount: —Å—É–º–º–∞\n- –ü–∞—Ä–∞–º–µ—Ç—Ä description: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ\n- –ü–∞—Ä–∞–º–µ—Ç—Ä operation_type: \"—Ä–∞—Å—Ö–æ–¥\"\n- –ü–∞—Ä–∞–º–µ—Ç—Ä source: \"telegram\"\n\nüè¢ –ë–ò–ó–ù–ï–°-–ö–ê–¢–ï–ì–û–†–ò–ò –†–ê–°–•–û–î–û–í (–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω):\n–∞—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞, –∞—Ä–µ–Ω–¥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –Ω–∞–ª–æ–≥–∏ –∏ —Å–±–æ—Ä—ã, –ø–∞—Ç–µ–Ω—Ç –ò–ü, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ–Ω–¥, —Ä–µ–∫–ª–∞–º–∞ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—è –∏ –æ—Ñ–∏—Å, —Å–≤—è–∑—å –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –ª–æ–≥–∏—Å—Ç–∏–∫–∞, –æ–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞, —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ, –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —É—Å–ª—É–≥–∏, –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç, –ª–∏—Ü–µ–Ω–∑–∏–∏ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã, —Ä–µ–º–æ–Ω—Ç –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, IT-—É—Å–ª—É–≥–∏ –∏ —Å–æ—Ñ—Ç, –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ—á–Ω—ã–µ, –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã, –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º, –∑–∞–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤, –∑–∞–∫—É–ø–∫–∞ —Å—ã—Ä—å—è, —É–ø–∞–∫–æ–≤–∫–∞ –∏ —Ç–∞—Ä–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –ª–æ–≥–∏—Å—Ç–∏–∫–∞, —Å–∫–ª–∞–¥—Å–∫–∏–µ —É—Å–ª—É–≥–∏, —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–µ –ø–æ—à–ª–∏–Ω—ã, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, PR –∏ —Ä–µ–∫–ª–∞–º–∞, –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –¥–∏–∑–∞–π–Ω, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –≤–∏–¥–µ–æ—Å—ä–µ–º–∫–∞, –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏—è, —Å—É–≤–µ–Ω–∏—Ä–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n\nüè† –õ–ò–ß–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò –†–ê–°–•–û–î–û–í (–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω):\n–∑–¥–æ—Ä–æ–≤—å–µ –∏ –∫—Ä–∞—Å–æ—Ç–∞, –ø–æ–º–æ—â—å —Ä–æ–¥–∏—Ç–µ–ª—è–º, –∞–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, —Ç—É—Ä–∏–∑–º, –ø–æ–¥–∞—Ä–∫–∏, –∫–≤–∞—Ä—Ç–ø–ª–∞—Ç–∞, –∫–æ–º–º—É–Ω–∞–ª–∫–∞, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ —Å–≤—è–∑—å, –º–µ–±–µ–ª—å, –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–µ, –æ–¥–µ–∂–¥–∞, —Ü–∏—Ñ—Ä–æ–≤—ã–µ –ø–æ–∫—É–ø–∫–∏, –¥–æ–º–∞—à–Ω–∏–µ –ø–∏—Ç–æ–º—Ü—ã, –∏–≥—Ä—É—à–∫–∏, –∫–∞—Ñ–µ, —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, –±–∞–∑–∞—Ä, –ø—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è, –±—ã—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã, –º–∞—à–∏–Ω–∞, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Ç–∞–∫—Å–∏, –º–∞—Ä—à—Ä—É—Ç–∫–∞, –≥–∞–∑, —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ, –≤–æ–¥–∞, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ\n\n–ü—Ä–∏–º–µ—Ä—ã:\n‚Ä¢ \"–ö—É–ø–∏–ª –µ–¥—ã –Ω–∞ 400 —Å–æ–º\" ‚Üí category: –ø—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è, source: telegram\n‚Ä¢ \"–û–ø–ª–∞—Ç–∏–ª –∞—Ä–µ–Ω–¥—É –æ—Ñ–∏—Å–∞ 35000\" ‚Üí category: –∞—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞, source: telegram\n‚Ä¢ \"–ó–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É 25000\" ‚Üí category: –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, source: telegram\n‚Ä¢ \"–†–µ–∫–ª–∞–º–∞ –≤ Instagram 8000\" ‚Üí category: —Ä–µ–∫–ª–∞–º–∞ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, source: telegram\n‚Ä¢ \"–ü–∞—Ç–µ–Ω—Ç –ò–ü 7000\" ‚Üí category: –ø–∞—Ç–µ–Ω—Ç –ò–ü, source: telegram\n\n---\nüí∞ –î–û–•–û–î–´: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç –ø—Ä–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–≥\n–í—ã–∑—ã–≤–∞–π –º–µ—Ç–æ–¥ AddRevenueGoogleTable –∏ –ø–µ—Ä–µ–¥–∞–≤–∞–π json –Ω–∞ –≤—Ö–æ–¥: \"date\", \"category\", \"amount\", \"description\", \"operation_type\", \"source\"\n- –ü–∞—Ä–∞–º–µ—Ç—Ä date: —Ñ–æ—Ä–º–∞—Ç \"–î–î.–ú–ú.–ì–ì–ì–ì\"\n- –ü–∞—Ä–∞–º–µ—Ç—Ä category: –æ–¥–Ω–∞ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–∞ –Ω–∏–∂–µ\n- –ü–∞—Ä–∞–º–µ—Ç—Ä amount: —Å—É–º–º–∞\n- –ü–∞—Ä–∞–º–µ—Ç—Ä description: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ\n- –ü–∞—Ä–∞–º–µ—Ç—Ä operation_type: \"–¥–æ—Ö–æ–¥\"\n- –ü–∞—Ä–∞–º–µ—Ç—Ä source: \"telegram\"\n\nüè¢ –ë–ò–ó–ù–ï–°-–ö–ê–¢–ï–ì–û–†–ò–ò –î–û–•–û–î–û–í (–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω):\n–ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤, –ø—Ä–æ–¥–∞–∂–∏ —É—Å–ª—É–≥, –ø–æ–¥–ø–∏—Å–∫–∏ –∏ SaaS, –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏, –¥–∏–≤–∏–¥–µ–Ω–¥—ã –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π, –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞–ª–æ–≥–æ–≤, –≥—Ä–∞–Ω—Ç—ã –∏ —Å—É–±—Å–∏–¥–∏–∏, –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º, –∞—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞, —Ñ—Ä–∞–Ω—à–∏–∑–∞, –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥, –æ–±—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∞—Ñ—Ñ–∏–ª–∏–∞—Ç—Å–∫–∏–µ –¥–æ—Ö–æ–¥—ã, –ø—Ä–æ–¥–∞–∂–∞ –∞–∫—Ç–∏–≤–æ–≤, —Ä–æ—è–ª—Ç–∏, –∫–æ–º–∏—Å—Å–∏–æ–Ω–Ω—ã–µ, –±–æ–Ω—É—Å—ã –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, –≤–æ–∑–≤—Ä–∞—Ç –ø–µ—Ä–µ–ø–ª–∞—Ç, —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ –≤—ã–ø–ª–∞—Ç—ã, –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏\n\nüè† –õ–ò–ß–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò –î–û–•–û–î–û–í (–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω):\n–∑–∞—Ä–ø–ª–∞—Ç–∞, –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞, –¥–∏–≤–∏–¥–µ–Ω–¥—ã –∏ –∫—É–ø–æ–Ω—ã, –¥–µ–ø–æ–∑–∏—Ç—ã, –ø–µ–Ω—Å–∏—è, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã, –ø–æ–¥–∞—Ä–∫–∏, –ø—Ä–æ–¥–∞–∂–∞ –∏–º—É—â–µ—Å—Ç–≤–∞, –∫—ç—à–±–µ–∫, —Ñ—Ä–∏–ª–∞–Ω—Å, —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—Å—Ç–≤–æ\n\n–ü—Ä–∏–º–µ—Ä:\n‚Ä¢ \"–î–æ—Ö–æ–¥ 1000 —Å–æ–º —Å –¥–∏–≤–∏–¥–µ–Ω–¥–æ–≤\" ‚Üí category: –¥–∏–≤–∏–¥–µ–Ω–¥—ã –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π, source: telegram\n‚Ä¢ \"–ó–∞—Ä–ø–ª–∞—Ç–∞ 40000\" ‚Üí category: –∑–∞—Ä–ø–ª–∞—Ç–∞, source: telegram\n‚Ä¢ \"–ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –º–µ—Å—è—Ü 250000\" ‚Üí category: –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤, source: telegram\n‚Ä¢ \"–ö—ç—à–±–µ–∫ 350 —Å–æ–º\" ‚Üí category: –∫—ç—à–±–µ–∫, source: telegram\n\n---\nüìÖ –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã:\n‚Ä¢ –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞: –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì\n‚Ä¢ \"–∑–∞ –≤—á–µ—Ä–∞\" ‚Üí –≤—ã—á–∏—Å–ª–∏ –¥–∞—Ç—É = —Å–µ–≥–æ–¥–Ω—è –º–∏–Ω—É—Å –æ–¥–∏–Ω –¥–µ–Ω—å –∏ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –î–î.–ú–ú.–ì–ì–ì–ì\n‚Ä¢ \"–∑–∞ 25 –º–∞—è\" ‚Üí –¥–æ–±–∞–≤—å —Ç–µ–∫—É—â–∏–π –≥–æ–¥ ‚Üí 25.05.2025\n‚Ä¢ \"–∑–∞ 25 –º–∞—è 2023\" ‚Üí –∏—Å–ø–æ–ª—å–∑—É–π –∫–∞–∫ –µ—Å—Ç—å ‚Üí 25.05.2023\n\nüßÆ –§–æ—Ä–º–∞—Ç —Å—É–º–º—ã:\n‚Ä¢ –ß–∏—Å–ª–æ –±–µ–∑ –≤–∞–ª—é—Ç—ã (—Å–æ–º—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)\n‚Ä¢ –ï—Å–ª–∏ —Å–∫–∞–∑–∞–Ω–æ \"300 —Å–æ–º 50 —Ç—ã–π—ã–Ω–æ–≤\" ‚Üí –∑–∞–ø–∏—à–∏ –∫–∞–∫ 300.50\n\n---\nüìä –ê–Ω–∞–ª–∏–∑ –∏—Å—Ç–æ—Ä–∏–∏:\n–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ–± –∞–Ω–∞–ª–∏–∑–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç workspaceAnalize.\n\n–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n- month: –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º (—è–Ω–≤–∞—Ä—å, —Ñ–µ–≤—Ä–∞–ª—å, –º–∞—Ä—Ç, –∞–ø—Ä–µ–ª—å, –º–∞–π, –∏—é–Ω—å, –∏—é–ª—å, –∞–≤–≥—É—Å—Ç, —Å–µ–Ω—Ç—è–±—Ä—å, –æ–∫—Ç—è–±—Ä—å, –Ω–æ—è–±—Ä—å, –¥–µ–∫–∞–±—Ä—å)\n- type: –¢–û–õ–¨–ö–û \"–¥–æ—Ö–æ–¥\" –∏–ª–∏ \"—Ä–∞—Å—Ö–æ–¥\"\n\n–ù–ï–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô –ø–∞—Ä–∞–º–µ—Ç—Ä:\n- category: –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—ë —É–∫–∞–∑–∞–ª)\n\n–ü–†–ò–ú–ï–†–´ –ü–†–ê–í–ò–õ–¨–ù–´–• –í–´–ó–û–í–û–í:\n\n–ó–∞–ø—Ä–æ—Å: \"–°–∫–æ–ª—å–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª –Ω–∞ —Ä–µ–∫–ª–∞–º—É –≤ –∞–ø—Ä–µ–ª–µ?\"\n‚Üí –í—ã–∑–æ–≤–∏: workspaceAnalize\n–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:\n{\n  \"month\": \"–∞–ø—Ä–µ–ª—å\",\n  \"type\": \"—Ä–∞—Å—Ö–æ–¥\",\n  \"category\": \"—Ä–µ–∫–ª–∞–º–∞ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥\"\n}\n\n–ó–∞–ø—Ä–æ—Å: \"–î–æ—Ö–æ–¥—ã –∑–∞ –º–∞–π\"\n‚Üí –í—ã–∑–æ–≤–∏: workspaceAnalize\n–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:\n{\n  \"month\": \"–º–∞–π\",\n  \"type\": \"–¥–æ—Ö–æ–¥\"\n}\n\n–ó–∞–ø—Ä–æ—Å: \"–û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –≤ –º–∞—Ä—Ç–µ\"\n‚Üí –í—ã–∑–æ–≤–∏: workspaceAnalize\n–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:\n{\n  \"month\": \"–º–∞—Ä—Ç\",\n  \"type\": \"—Ä–∞—Å—Ö–æ–¥\"\n}\n\n---\nüíº –ë–ò–ó–ù–ï–°-–ê–ù–ê–õ–ò–¢–ò–ö–ê –î–õ–Ø –ö–´–†–ì–´–ó–°–¢–ê–ù–ê:\n–¢—ã –º–æ–∂–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Ç–∏–ø–∞:\n‚Ä¢ \"–ü–æ—á–µ–º—É –ø—Ä–∏–±—ã–ª—å —É–ø–∞–ª–∞ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ?\"\n‚Ä¢ \"–ö–∞–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ —Å–∞–º—ã–µ –±–æ–ª—å—à–∏–µ?\"\n‚Ä¢ \"–°—Ä–∞–≤–Ω–∏ –¥–æ—Ö–æ–¥—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞\"\n‚Ä¢ \"–°–∫–æ–ª—å–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –Ω–∞ –Ω–∞–ª–æ–≥–∏ –≤ —ç—Ç–æ–º –≥–æ–¥—É?\"\n‚Ä¢ \"–ö–∞–∫–∞—è —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º?\"\n‚Ä¢ \"–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –ø–∞—Ç–µ–Ω—Ç?\"\n‚Ä¢ \"–†–∞—Å—Å—á–∏—Ç–∞–π –ù–î–° 12% –æ—Ç —Å—É–º–º—ã\"\n‚Ä¢ \"–ö–∞–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Å–æ—Ü—Ñ–æ–Ω–¥?\"\n\n---\nüí° –£–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò:\n\nüîÑ –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –ü–û–î–ü–ò–°–û–ö:\n–ï—Å–ª–∏ —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏:\n- \"–û–ø–ª–∞—Ç–∏–ª Netflix 699 —Å–æ–º\" ‚Üí \"üí° –≠—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞? –•–æ—Ç–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–ª–µ–¥—É—é—â–µ–º –ø–ª–∞—Ç–µ–∂–µ?\"\n- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏\n\nüìä –ê–ù–ê–õ–ò–ó –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n–ü–æ—Å–ª–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–π —Ç—Ä–∞—Ç—ã (>3000 —Å–æ–º):\n- –°—Ä–∞–≤–Ω–∏–≤–∞–π —Å –ø—Ä–æ—à–ª—ã–º –º–µ—Å—è—Ü–µ–º\n- –ü–æ–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –º–µ—Å—è—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞\n- –ü—Ä–µ–¥–ª–∞–≥–∞–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã —ç–∫–æ–Ω–æ–º–∏–∏\n\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø –û –ë–Æ–î–ñ–ï–¢–ï:\n–ü—Ä–æ–≤–µ—Ä—è–π –ª–∏–º–∏—Ç—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏:\n- –ï—Å–ª–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ >80% –ª–∏–º–∏—Ç–∞: \"‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ 85% –ª–∏–º–∏—Ç–∞ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã\"\n- –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç: \"üö® –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞ 1,500 —Å–æ–º\"\n- –ï—Å–ª–∏ –±–ª–∏–∑–æ–∫ –º–µ—Å—è—á–Ω—ã–π –±—é–¥–∂–µ—Ç: \"‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å 15% –æ—Ç –º–µ—Å—è—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞\"\n\nüí° –£–ú–ù–´–ï –í–û–ü–†–û–°–´:\n–ó–∞–¥–∞–≤–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:\n- \"–ö—É–ø–∏–ª —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ 35000\" ‚Üí \"–≠—Ç–æ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –∏–ª–∏ –ª–∏—á–Ω–æ–µ?\"\n- \"–û–ø–ª–∞—Ç–∏–ª —Ä–µ–∫–ª–∞–º—É\" ‚Üí \"–í –∫–∞–∫–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ? (Instagram, Google, Facebook, 2GIS)\"\n\nüìà –ü–†–û–ê–ö–¢–ò–í–ù–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê:\n–í –∫–æ–Ω—Ü–µ –¥–Ω—è (–µ—Å–ª–∏ –±—ã–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏):\n\"üìä –ó–∞ —Å–µ–≥–æ–¥–Ω—è: –î–æ—Ö–æ–¥—ã +10,000 —Å–æ–º, –†–∞—Å—Ö–æ–¥—ã -2,500 —Å–æ–º.\n–ü—Ä–∏–±—ã–ª—å: +7,500 —Å–æ–º\n–û—Å—Ç–∞–ª–æ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞: 32,000 —Å–æ–º –æ—Ç –±—é–¥–∂–µ—Ç–∞ (64%)\"\n\nüéØ –¶–ï–õ–ò –ò –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï:\n- \"–•–æ—á—É –Ω–∞–∫–æ–ø–∏—Ç—å 300000 –Ω–∞ –º–∞—à–∏–Ω—É\" ‚Üí –†–∞—Å—Å—á–∏—Ç–∞–π —Å–∫–æ–ª—å–∫–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å\n- \"–ù—É–∂–Ω–æ —Å–Ω–∏–∑–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ 20%\" ‚Üí –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥–¥–µ –º–æ–∂–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å\n\nüîç –ê–ù–û–ú–ê–õ–ò–ò:\n–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–π –Ω–µ–æ–±—ã—á–Ω—ã–µ —Ç—Ä–∞—Ç—ã:\n- \"‚ö†Ô∏è –†–∞—Å—Ö–æ–¥ –Ω–∞ —Ç–∞–∫—Å–∏ —Å–µ–≥–æ–¥–Ω—è –≤ 3 —Ä–∞–∑–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ\"\n- \"üí° –°—Ç—Ä–∞–Ω–Ω–æ, –æ–±—ã—á–Ω–æ –≤—ã –Ω–µ —Ç—Ä–∞—Ç–∏—Ç–µ –±–æ–ª—å—à–µ 1500 —Å–æ–º –Ω–∞ –∫–∞—Ñ–µ\"\n\nüí∏ –ù–ê–õ–û–ì–ò –ö–´–†–ì–´–ó–°–¢–ê–ù:\n–ü—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞—Ö –æ –Ω–∞–ª–æ–≥–∞—Ö:\n- –ù–î–° 12%\n- –ü–æ–¥–æ—Ö–æ–¥–Ω—ã–π: –¥–æ 300,000 —Å–æ–º = 10%, —Å–≤—ã—à–µ = 15%\n- –°–æ—Ü—Ñ–æ–Ω–¥ 12.5% –æ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã\n- –ü–∞—Ç–µ–Ω—Ç –ò–ü: –æ—Ç 5,000 –¥–æ 10,000 —Å–æ–º/–º–µ—Å—è—Ü\n\n---\n–í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥–∞–≤–∞–π –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¢–û–ß–ù–û –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ù–ï –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–∏–µ –ø–æ–ª—è.\n\n‚úÖ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –≤–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç –≤ Telegram:\n\"–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞: [–¥–∞–Ω–Ω—ã–µ]\"\n–∏–ª–∏\n\"–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω: [—Ä–µ–∑—É–ª—å—Ç–∞—Ç]\"\n\n–ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥—Å—á–µ—Ç—ã - –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç Calculator.\n\n–¢–µ–±–µ –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ–¥–Ω—É –æ–ø–µ—Ä–∞—Ü–∏—é –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ä–∞–∑—É:\n- \"–ö—É–ø–∏–ª –∫–µ—Ñ–∏—Ä –∑–∞ 50 —Å–æ–º –∏ —Ä—è–∂–µ–Ω–∫—É –∑–∞ 49 —Å–æ–º\" ‚Üí –°—É–º–º–∏—Ä—É–π: –∫–∞—Ç–µ–≥–æ—Ä–∏—è \"–ø—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è\", –æ–ø–∏—Å–∞–Ω–∏–µ \"–∫–µ—Ñ–∏—Ä –∏ —Ä—è–∂–µ–Ω–∫–∞\", amount: 99\n- \"–û–ø–ª–∞—Ç–∏–ª –∞—Ä–µ–Ω–¥—É 35000 –∏ –∑–∞—Ä–ø–ª–∞—Ç—É 25000\" ‚Üí 2 –∑–∞–ø–∏—Å–∏: –∞—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞ 35000 –∏ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ 25000\n\n–í–∞–∂–Ω–æ! –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å - –≤–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è.\n\n–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û –û –ö–´–†–ì–´–ó–°–¢–ê–ù–ï:\n- –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–∞–Ω–∫–∏: KICB, Optima Bank, –ë–∞–∫–∞–π –ë–∞–Ω–∫, –î–æ—Å-–ö—Ä–µ–¥–æ–±–∞–Ω–∫\n- –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã: 2GIS, Instagram, Facebook\n- –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: –º–∞—Ä—à—Ä—É—Ç–∫–∞ (–æ–±—ã—á–Ω–æ 15-20 —Å–æ–º), —Ç–∞–∫—Å–∏ (–æ—Ç 100 —Å–æ–º)\n- –ë–∞–∑–∞—Ä - —ç—Ç–æ —Ä—ã–Ω–æ–∫, –≥–¥–µ –ø–æ–∫—É–ø–∞—é—Ç –ø—Ä–æ–¥—É–∫—Ç—ã\n- –ö–æ–º–º—É–Ω–∞–ª–∫–∞ = –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ (–≥–∞–∑, —Å–≤–µ—Ç, –≤–æ–¥–∞, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ)"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        352,
        16
      ],
      "id": "aaa00d7e-6fa3-40ab-8eed-4f1aae4424ea",
      "name": "Financial Assistant",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        1472,
        -48
      ],
      "id": "8d93eeaa-840d-4786-a199-4eba78336814",
      "name": "Calculator"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Bot Trigger').first().json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "reply_to_message_id": "={{ $('Telegram Bot Trigger').first().json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1408,
        -256
      ],
      "id": "78a5fef3-decd-4bc1-9906-255676655d7f",
      "name": "Send Telegram Response",
      "webhookId": "a2f9609c-4b7a-4d51-aaa6-c889f56aefc9",
      "credentials": {
        "telegramApi": {
          "id": "Nb8jQBRgnrgZzmCF",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "description": "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–∞—Å—Ö–æ–¥–∞",
        "jsCode": "const dateStr = $fromAI('date');\nconst [day, month, year] = dateStr.split('.');\nconst sqlDate = `${year}-${month}-${day}`;\nconst userId = $('Telegram Bot Trigger').first().json.message.from.id;\n\nreturn {\n  json: {\n    user_id: userId,\n    date: sqlDate,\n    category: $fromAI('category'),\n    amount: parseFloat($fromAI('amount')),\n    description: $fromAI('description') || ''\n  }\n};"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.3,
      "position": [
        992,
        240
      ],
      "id": "39be6e2b-f68a-44bf-bdb1-54fe5325351d",
      "name": "Code Tool"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO expenses (user_id, date, category, amount, description, operation_type, source)\nVALUES (\n  {{ $json.user_id }},\n  '{{ $json.date }}',\n  '{{ $json.category }}',\n  {{ $json.amount }},\n  '{{ $json.description }}',\n  '—Ä–∞—Å—Ö–æ–¥',\n  'telegram'\n)\nRETURNING id, date, category, amount, description;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        992,
        384
      ],
      "id": "075b2356-2d19-45e8-b590-019fd85a8f1c",
      "name": "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\nWITH expense_sum AS (\n  SELECT COALESCE(SUM(amount), 0) as total_spent\n  FROM expenses\n  WHERE user_id = {{ $json.user_id }}\n    AND category = '{{ $json.category }}'\n    AND date >= DATE_TRUNC('month', CURRENT_DATE)\n),\ncategory_limit AS (\n  SELECT limit_amount\n  FROM limits\n  WHERE user_id = {{ $json.user_id }}\n    AND category = '{{ $json.category }}'\n    AND month = TO_CHAR(CURRENT_DATE, 'YYYY-MM')\n  LIMIT 1\n)\nSELECT \n  e.total_spent,\n  l.limit_amount,\n  CASE \n    WHEN l.limit_amount IS NULL THEN NULL\n    WHEN e.total_spent > l.limit_amount THEN 'exceeded'\n    WHEN e.total_spent > (l.limit_amount * 0.8) THEN 'warning'\n    ELSE 'ok'\n  END as limit_status,\n  CASE\n    WHEN l.limit_amount IS NOT NULL THEN ROUND((e.total_spent / l.limit_amount) * 100)\n    ELSE NULL\n  END as percent_used\nFROM expense_sum e\nLEFT JOIN category_limit l ON true;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        992,
        528
      ],
      "id": "cf475125-1e99-4380-a615-2d01a4bf3326",
      "name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const dateStr = $fromAI('date');\nconst [day, month, year] = dateStr.split('.');\nconst sqlDate = `${year}-${month}-${day}`;\n\nconst userId = $('Telegram Bot Trigger').first().json.message.from.id;\n\nreturn {\n  json: {\n    user_id: userId,\n    date: sqlDate,\n    category: $fromAI('category'),\n    amount: parseFloat($fromAI('amount')),\n    description: $fromAI('description') || '',\n    operation_type: '–¥–æ—Ö–æ–¥',\n    source: 'telegram'\n  }\n};"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.3,
      "position": [
        192,
        592
      ],
      "id": "29baab3b-8986-4c97-98b3-95108c4d6cd6",
      "name": "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ—Ö–æ–¥–∞"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO income (user_id, date, category, amount, description, operation_type, source)\nVALUES (\n  {{ $json.user_id }},\n  '{{ $json.date }}',\n  '{{ $json.category }}',\n  {{ $json.amount }},\n  '{{ $json.description }}',\n  '–¥–æ—Ö–æ–¥',\n  'telegram'\n)\nRETURNING id, date, category, amount, description;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        320,
        528
      ],
      "id": "3cf76964-b9a8-435e-995b-ab592df55bb5",
      "name": "–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –≤ –Ω–æ–º–µ—Ä\nconst monthNames = {\n  '—è–Ω–≤–∞—Ä—å': '01', '—Ñ–µ–≤—Ä–∞–ª—å': '02', '–º–∞—Ä—Ç': '03',\n  '–∞–ø—Ä–µ–ª—å': '04', '–º–∞–π': '05', '–∏—é–Ω—å': '06',\n  '–∏—é–ª—å': '07', '–∞–≤–≥—É—Å—Ç': '08', '—Å–µ–Ω—Ç—è–±—Ä—å': '09',\n  '–æ–∫—Ç—è–±—Ä—å': '10', '–Ω–æ—è–±—Ä—å': '11', '–¥–µ–∫–∞–±—Ä—å': '12'\n};\n\nconst month = $fromAI('month').toLowerCase();\nconst monthNum = monthNames[month] || '10';\nconst year = new Date().getFullYear();\nconst yearMonth = `${year}-${monthNum}`;\n\nconst userId = $('Telegram Bot Trigger').first().json.message.from.id;\nconst type = $fromAI('type'); // \"–¥–æ—Ö–æ–¥\" –∏–ª–∏ \"—Ä–∞—Å—Ö–æ–¥\"\nconst category = $fromAI('category') || null;\n\nreturn {\n  json: {\n    user_id: userId,\n    year_month: yearMonth,\n    type: type,\n    category: category,\n    month_name: month\n  }\n};"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.3,
      "position": [
        448,
        720
      ],
      "id": "01451097-bc4f-473d-ab79-f32706fcbb50",
      "name": "–ü–∞—Ä—Å–∏–Ω–≥ –º–µ—Å—è—Ü–∞"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH monthly_data AS (\n  SELECT \n    category,\n    COUNT(*) as transaction_count,\n    SUM(amount) as total_amount,\n    AVG(amount) as avg_amount\n  FROM income\n  WHERE user_id = {{ $json.user_id }}\n    AND TO_CHAR(date, 'YYYY-MM') = '{{ $json.year_month }}'\n    {{ $json.category ? \"AND category = '\" + $json.category + \"'\" : \"\" }}\n  GROUP BY category\n  ORDER BY total_amount DESC\n)\nSELECT \n  *,\n  (SELECT SUM(total_amount) FROM monthly_data) as grand_total\nFROM monthly_data;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        784,
        816
      ],
      "id": "7f51d030-328a-40b3-9abf-6042f126f09f",
      "name": "–ê–Ω–∞–ª–∏–∑ –¥–æ—Ö–æ–¥–æ–≤",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9af39ade-d2ac-4587-b4cd-bccb18fece32",
              "leftValue": "={{ $json.type }}",
              "rightValue": "—Ä–∞—Å—Ö–æ–¥",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        576,
        464
      ],
      "id": "894a5626-98ca-439e-943b-56cbabc84562",
      "name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH monthly_data AS (\n  SELECT \n    category,\n    COUNT(*) as transaction_count,\n    SUM(amount) as total_amount,\n    AVG(amount) as avg_amount\n  FROM expenses\n  WHERE user_id = {{ $json.user_id }}\n    AND TO_CHAR(date, 'YYYY-MM') = '{{ $json.year_month }}'\n    {{ $json.category ? \"AND category = '\" + $json.category + \"'\" : \"\" }}\n  GROUP BY category\n  ORDER BY total_amount DESC\n)\nSELECT \n  *,\n  (SELECT SUM(total_amount) FROM monthly_data) as grand_total\nFROM monthly_data;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        832,
        672
      ],
      "id": "3ff919d2-cbd5-4428-a7e3-9712217054e4",
      "name": "–ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO users (user_id, username, first_name, last_name, telegram_chat_id)\nVALUES (\n  {{ $json.message.from.id }},\n  '{{ $json.message.from.username || \"\" }}',\n  '{{ $json.message.from.first_name || \"\" }}',\n  '{{ $json.message.from.last_name || \"\" }}',\n  {{ $json.message.chat.id }}\n)\nON CONFLICT (user_id) \nDO UPDATE SET \n  username = EXCLUDED.username,\n  last_activity = NOW()\nRETURNING *;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -800,
        240
      ],
      "id": "d3996e68-eade-4127-80c1-7e3a96babcd9",
      "name": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      },
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Bot Trigger": {
      "main": [
        [
          {
            "node": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type Switch": {
      "main": [
        [
          {
            "node": "Download Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare Text Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Voice File": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Financial Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Text Data": {
      "main": [
        [
          {
            "node": "Financial Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Memory": {
      "ai_memory": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Financial Assistant": {
      "main": [
        [
          {
            "node": "Send Telegram Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code Tool": {
      "ai_tool": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥": {
      "ai_tool": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤": {
      "ai_tool": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ—Ö–æ–¥–∞": {
      "ai_tool": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥": {
      "ai_tool": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "–ü–∞—Ä—Å–∏–Ω–≥ –º–µ—Å—è—Ü–∞": {
      "ai_tool": [
        [
          {
            "node": "Financial Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞": {
      "main": [
        [
          {
            "node": "–ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "–ê–Ω–∞–ª–∏–∑ –¥–æ—Ö–æ–¥–æ–≤",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": {
      "main": [
        [
          {
            "node": "Message Type Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e7a871fb-7dae-43a7-87b5-076df9042ce6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bcdca7003a882ee2cf9d975eab94cc02ba456a1ed2ac37511421cb2edeb80c62"
  },
  "id": "poGBTuaN7LQs9hwD",
  "tags": []
}