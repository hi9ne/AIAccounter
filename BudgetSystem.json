{
  "name": "Budget System with Alerts",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "3f61769a-8e0e-45d6-a13a-7fbf02922efc",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -448,
        112
      ],
      "webhookId": "budget-system",
      "credentials": {
        "telegramApi": {
          "id": "Nb8jQBRgnrgZzmCF",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/budget",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Set Budget"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/limit",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Set Limit"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/check",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Check Budget"
            }
          ]
        },
        "options": {}
      },
      "id": "38ca69bc-5ada-486f-9277-dff80cd242de",
      "name": "–†–æ—É—Ç–µ—Ä –∫–æ–º–∞–Ω–¥",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -224,
        112
      ]
    },
    {
      "parameters": {
        "jsCode": "const text = $json.message.text || '';\nconst match = text.match(/\\/budget\\s+(\\d+)/);\n\nif (match) {\n  const amount = parseFloat(match[1]);\n  const userId = $json.message.from.id;\n  const now = new Date();\n  const month = now.toLocaleString('ru-RU', { \n    year: 'numeric', \n    month: '2-digit',\n    timeZone: 'Asia/Bishkek'\n  }).replace('.', '-').slice(0, 7);\n  \n  return {\n    json: {\n      user_id: userId,\n      month: month,\n      budget_amount: amount,\n      telegram_chat_id: $json.message.chat.id\n    }\n  };\n} else {\n  throw new Error('–§–æ—Ä–º–∞—Ç: /budget <—Å—É–º–º–∞>');\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "ee16460d-e16b-4ffd-b026-d0f0652080c0",
      "name": "–ü–∞—Ä—Å–∏—Ç—å /budget"
    },
    {
      "parameters": {
        "jsCode": "const text = $json.message.text || '';\nconst match = text.match(/\\/limit\\s+([^\\d]+)\\s+(\\d+)/);\n\nif (match) {\n  const category = match[1].trim();\n  const amount = parseFloat(match[2]);\n  const userId = $json.message.from.id;\n  const now = new Date();\n  const month = now.toLocaleString('ru-RU', { \n    year: 'numeric', \n    month: '2-digit',\n    timeZone: 'Asia/Bishkek'\n  }).replace('.', '-').slice(0, 7);\n  \n  return {\n    json: {\n      user_id: userId,\n      category: category,\n      limit_amount: amount,\n      month: month,\n      telegram_chat_id: $json.message.chat.id\n    }\n  };\n} else {\n  throw new Error('–§–æ—Ä–º–∞—Ç: /limit <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> <—Å—É–º–º–∞>');\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        208
      ],
      "id": "28cdda92-192a-4d59-9824-7288ee5e0465",
      "name": "–ü–∞—Ä—Å–∏—Ç—å /limit"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=‚úÖ –ë—é–¥–∂–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {{ $json.budget_amount.toLocaleString('ru-RU') }} —Å–æ–º –Ω–∞ {{ $json.month }}\\n\\nüí° –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\\n  ‚Ä¢ –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 80% –±—é–¥–∂–µ—Ç–∞\\n  ‚Ä¢ –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ 100%",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        448,
        0
      ],
      "id": "b3cde8cd-193a-41a4-b6da-9719eee2da13",
      "name": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞",
      "webhookId": "9e0eecc4-5ed8-4e14-ad2c-964a1a0b7d42",
      "credentials": {
        "telegramApi": {
          "id": "Nb8jQBRgnrgZzmCF",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=‚úÖ –õ–∏–º–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:\\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {{ $json.category }}\\n–°—É–º–º–∞: {{ $json.limit_amount.toLocaleString('ru-RU') }} —Å–æ–º\\n–ü–µ—Ä–∏–æ–¥: {{ $json.month }}\\n\\nüí° –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        448,
        208
      ],
      "id": "96c94a50-3854-4bed-b364-914a1b37b46c",
      "name": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞",
      "webhookId": "b3fdd42b-6872-47c6-a177-7fbeaec62c27",
      "credentials": {
        "telegramApi": {
          "id": "Nb8jQBRgnrgZzmCF",
          "name": "AIAccounter"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO budgets (user_id, month, budget_amount)\nVALUES (\n  {{ $json.user_id }},\n  '{{ $json.month }}',\n  {{ $json.budget_amount }}\n)\nON CONFLICT (user_id, month)\nDO UPDATE SET\n  budget_amount = EXCLUDED.budget_amount,\n  last_updated = NOW()\nRETURNING *;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        224,
        0
      ],
      "id": "e1d31026-4951-4656-9dc1-ca17f953efe5",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO limits (user_id, category, limit_amount, month)\nVALUES (\n  {{ $json.user_id }},\n  '{{ $json.category }}',\n  {{ $json.limit_amount }},\n  '{{ $json.month }}'\n)\nON CONFLICT (user_id, category, month)\nDO UPDATE SET\n  limit_amount = EXCLUDED.limit_amount,\n  last_updated = NOW()\nRETURNING *;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        208,
        208
      ],
      "id": "9273d329-cb71-4127-94c4-e2f77b86e810",
      "name": "Execute a SQL query1",
      "credentials": {
        "postgres": {
          "id": "3CGZzcUsaAWp8nrl",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "–†–æ—É—Ç–µ—Ä –∫–æ–º–∞–Ω–¥",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–†–æ—É—Ç–µ—Ä –∫–æ–º–∞–Ω–¥": {
      "main": [
        [
          {
            "node": "–ü–∞—Ä—Å–∏—Ç—å /budget",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "–ü–∞—Ä—Å–∏—Ç—å /limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–ü–∞—Ä—Å–∏—Ç—å /budget": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–ü–∞—Ä—Å–∏—Ç—å /limit": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query1": {
      "main": [
        [
          {
            "node": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5b0ca10e-7a4d-4081-9c7a-b97eacca4df2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bcdca7003a882ee2cf9d975eab94cc02ba456a1ed2ac37511421cb2edeb80c62"
  },
  "id": "yHWx4R3y5lPHZrKN",
  "tags": []
}