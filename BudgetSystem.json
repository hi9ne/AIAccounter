{
  "name": "Budget System with Alerts",
  "nodes": [
    {
      "parameters": {
        "updates": ["message"]
      },
      "id": "telegram-trigger",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [240, 400],
      "webhookId": "budget-system"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/budget",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Set Budget"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/limit",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Set Limit"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/check",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Check Budget"
            }
          ]
        }
      },
      "id": "command-router",
      "name": "–†–æ—É—Ç–µ—Ä –∫–æ–º–∞–Ω–¥",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [460, 400]
    },
    {
      "parameters": {
        "jsCode": "const text = $input.item.json.message.text;\nconst parts = text.split(' ');\n\nif (parts.length < 2) {\n  return {\n    json: {\n      error: true,\n      chat_id: $input.item.json.message.chat.id,\n      message: '‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±—é–¥–∂–µ—Ç–∞\\n–ü—Ä–∏–º–µ—Ä: /budget 50000'\n    }\n  };\n}\n\nconst amount = parseFloat(parts[1]);\n\nif (isNaN(amount) || amount <= 0) {\n  return {\n    json: {\n      error: true,\n      chat_id: $input.item.json.message.chat.id,\n      message: '‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞'\n    }\n  };\n}\n\nconst userId = $input.item.json.message.from.id;\nconst currentMonth = new Date().toLocaleString('ru-RU', { month: 'long', year: 'numeric', timeZone: 'Asia/Bishkek' });\n\nreturn {\n  json: {\n    user_id: userId,\n    chat_id: $input.item.json.message.chat.id,\n    budget_amount: amount,\n    month: currentMonth,\n    date: new Date().toISOString()\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300],
      "id": "parse-budget",
      "name": "–ü–∞—Ä—Å–∏—Ç—å /budget"
    },
    {
      "parameters": {
        "jsCode": "const text = $input.item.json.message.text;\nconst parts = text.split(' ');\n\nif (parts.length < 3) {\n  return {\n    json: {\n      error: true,\n      chat_id: $input.item.json.message.chat.id,\n      message: '‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å—É–º–º—É\\n–ü—Ä–∏–º–µ—Ä: /limit –ø—Ä–æ–¥—É–∫—Ç—ã 15000'\n    }\n  };\n}\n\nconst category = parts.slice(1, -1).join(' ');\nconst amount = parseFloat(parts[parts.length - 1]);\n\nif (isNaN(amount) || amount <= 0) {\n  return {\n    json: {\n      error: true,\n      chat_id: $input.item.json.message.chat.id,\n      message: '‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞'\n    }\n  };\n}\n\nconst userId = $input.item.json.message.from.id;\nconst currentMonth = new Date().toLocaleString('ru-RU', { month: 'long', year: 'numeric', timeZone: 'Asia/Bishkek' });\n\nreturn {\n  json: {\n    user_id: userId,\n    chat_id: $input.item.json.message.chat.id,\n    category: category,\n    limit_amount: amount,\n    month: currentMonth,\n    date: new Date().toISOString()\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 500],
      "id": "parse-limit",
      "name": "–ü–∞—Ä—Å–∏—Ç—å /limit"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1Zl8_Q-t6s3hN8yr2Pn85_8cwk0iNV5qDOvAglVmVMdo",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=budgets",
          "mode": "id",
          "cachedResultName": "–ë—é–¥–∂–µ—Ç—ã"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "User ID": "={{ $json.user_id }}",
            "Month": "={{ $json.month }}",
            "Budget Amount": "={{ $json.budget_amount }}",
            "Last Updated": "={{ $json.date }}"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [900, 300],
      "id": "save-budget",
      "name": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1Zl8_Q-t6s3hN8yr2Pn85_8cwk0iNV5qDOvAglVmVMdo",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=limits",
          "mode": "id",
          "cachedResultName": "–õ–∏–º–∏—Ç—ã"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "User ID": "={{ $json.user_id }}",
            "Category": "={{ $json.category }}",
            "Limit Amount": "={{ $json.limit_amount }}",
            "Month": "={{ $json.month }}",
            "Last Updated": "={{ $json.date }}"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [900, 500],
      "id": "save-limit",
      "name": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∏–º–∏—Ç"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=‚úÖ –ë—é–¥–∂–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {{ $json.budget_amount.toLocaleString('ru-RU') }} —Å–æ–º –Ω–∞ {{ $json.month }}\\n\\nüí° –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\\n  ‚Ä¢ –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 80% –±—é–¥–∂–µ—Ç–∞\\n  ‚Ä¢ –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ 100%",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1120, 300],
      "id": "confirm-budget",
      "name": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=‚úÖ –õ–∏–º–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:\\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {{ $json.category }}\\n–°—É–º–º–∞: {{ $json.limit_amount.toLocaleString('ru-RU') }} —Å–æ–º\\n–ü–µ—Ä–∏–æ–¥: {{ $json.month }}\\n\\nüí° –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1120, 500],
      "id": "confirm-limit",
      "name": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞"
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "–†–æ—É—Ç–µ—Ä –∫–æ–º–∞–Ω–¥",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–†–æ—É—Ç–µ—Ä –∫–æ–º–∞–Ω–¥": {
      "main": [
        [
          {
            "node": "–ü–∞—Ä—Å–∏—Ç—å /budget",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "–ü–∞—Ä—Å–∏—Ç—å /limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–ü–∞—Ä—Å–∏—Ç—å /budget": {
      "main": [
        [
          {
            "node": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–ü–∞—Ä—Å–∏—Ç—å /limit": {
      "main": [
        [
          {
            "node": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∏–º–∏—Ç",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç": {
      "main": [
        [
          {
            "node": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∏–º–∏—Ç": {
      "main": [
        [
          {
            "node": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "tags": []
}
